@page "/events"

@using eventTicketPesentation.Data
@using eventTicketPesentation.Models
@using eventTicketPesentation.Network
@inject EventService _service

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (_events == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        @* <thead> *@
        @* <tr> *@
        @*     <th>Date</th> *@
        @*     <th>Temp. (C)</th> *@
        @*     <th>Temp. (F)</th> *@
        @*     <th>Summary</th> *@
        @* </tr> *@
        @* </thead> *@
        <tbody>
        @* @foreach (var ev in _events) *@
        @* { *@
        @*     <tr> *@
        @*         <td>@ev.name</td> *@
        @*         <td>@ev.description</td> *@
        @*         <td>@ev.location</td> *@
        @*     </tr> *@
        @* } *@
        </tbody>
    </table>
}

@code {
    private List<Event> _events;

    protected override async Task OnInitializedAsync()
    {
        // _events = await _service.GetAllEventsAsync();
    }

}