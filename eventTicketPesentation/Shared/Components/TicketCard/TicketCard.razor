@inject ExportService _exportService
@inject Microsoft.JSInterop.IJSRuntime _jsRuntime
@using System.IO
@using eventTicketPesentation.Data
@using eventTicketPesentation.Models
@using eventTicketPesentation.Service
@using eventTicketPesentation.Service.dto
<div class="col-md-6">
    <div class="ticket__item">
        <div class="ticket__image-container">
            <a href="/events/@TicketGroup.EventId">
                <img class="ticket__event-image img-fluid"
                     src="@TicketGroup.Thumbnail"
                     alt="Thumbnail">
            </a>
        </div>

        <div class="ticket__details">
            <h4 class="ticket__title">
                <a href="/events/@TicketGroup.EventId">@TicketGroup.NameOfEvent</a>
            </h4>
            <div class="ticket__info">
                <ul class="ticket__time-location p-0">
                    <li class="list-unstyled d-flex mb-3">
                        <img class="mr-2" src="images/calendar-icon.svg" alt="Calendar icon"/>
                        <p class="m-0">later</p>
                    </li>
                    <li class="list-unstyled d-flex mb-3">
                        <img class="mr-2" src="images/time-icon.svg" alt="Time icon"/>
                        <p class="m-0">@TicketGroup.TimeOfTheEvent</p>
                    </li>
                    <li class="list-unstyled d-flex mb-3">
                        <img class="mr-2" src="images/location-icon.svg" alt="Location icon"/>
                        <p class="m-0">@TicketGroup.Location</p>
                    </li>

                    <li class="list-unstyled d-flex mb-3">
                        <img class="mr-2" src="images/tickets-icon.svg" alt="Tickets icon"/>
                        <p class="ticket__count m-0"> @( @TicketGroup.NoOfTickets() > 1 ? @TicketGroup.NoOfTickets() + " tickets" :  @TicketGroup.NoOfTickets() +" ticket" )
                              at the price of <strong >@TicketGroup.TotalPrice()</strong> dkk
                        </p>
                    </li>

                </ul>
            </div>
            <button @onclick="@ExportToPdf" class="d-flex mx-auto">See Ticket</button>
        </div>

    </div>
</div>

@code {
    
    [Parameter]
    public TicketGroupDTO TicketGroup { get; set; }

    protected async Task ExportToPdf()
    {
        await using (MemoryStream memoryStream = _exportService.CreatePdf(TicketGroup))
        {
            await _jsRuntime.SaveAs("Ticket.pdf", memoryStream.ToArray());
        }
    }

}